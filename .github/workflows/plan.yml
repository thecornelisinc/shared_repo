name: Terraform Plan for Development

on:
  workflow_call:
    inputs:
      account:
        description: 'The AWS account to deploy to (e.g., prod, sec)'
        required: true
        type: string
        
      aws_region:
        required: true
        type: string
        description: 'AWS Region'
        
      aws_role_to_assume:
        required: true
        type: string
        description: 'IAM Role ARN to assume via OIDC'
        
    secrets: 
      snyk_token:
        required: true
        description: 'Snyk API token for authentication'
jobs:
  Security-Checks:
    name: Snyk IaC Security Scan
    runs-on: ubuntu-latest
    steps:
    # Checkout Repository
      - name: Checkout repository
        uses: actions/check@v3
    # Install Snyk IaC
      - name: Install Snyk
        run: npm install -g snyk

    # Authenicate with Snyk
      - name: Authenticate Snyk 
        run: snyk auth ${{ secrets.snyk_tokens

    # Run Snyk Test
      - name: Run Snyk IaC Rest
        run: snyk iac scan . --report --severity-threshold=high
        continue-on-error: false

    # Show Sbyk IaC Test Result
      - name: Show failed test result
        if: failure()
        run: echo "Snyk IaC test failed. Please review security issues"
      
  terraform-apply:
    name: Terraform Apply for ${{ inputs.account }}
    runs-on: ubuntu-latest
    needs: Security-Checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Plan Terraform
        id: plan
        run: terraform plan -var-file=${{ inputs.account }}.tfvars
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Post-Deployment Notifications
        run: echo "Deployment to ${{ inputs.account }} environment completed."

