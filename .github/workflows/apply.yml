# .github/workflows/aws_tf_apply.yml
name: Terraform Apply for Main

on:
  workflow_call:
    inputs:
      path:
        description: 'The path to the Terraform files for this account'
        required: true
        type: string       
      aws_region:
        required: true
        type: string
        description: 'AWS Region'
      aws_role_to_assume:
        required: true
        type: string
        description: 'IAM Role ARN to assume via OIDC'
      environment:
        required: true
        type: string
        description: 'IAM Role ARN to assume via OIDC'

jobs:
#   snyk-iac-check:
#     name: Snyk IaC Security Check for ${{ inputs.account }}
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install Snyk
#         run: npm install -g snyk

#       - name: Authenticate Snyk
#         run: snyk auth ${{ secrets.SNYK_TOKEN }}

#       - name: Snyk IaC Test
#         run: snyk iac test --severity-threshold=high ${{ inputs.path }}

  terraform-apply:
    name: Terraform Apply for ${{ inputs.path }}
    runs-on: ubuntu-latest
    # needs: snyk-iac-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.path }}
  
      - name: Plan Terraform
        id: plan
        run: terraform plan -var-file=${{ inputs.environment }}.tfvars
        working-directory: ${{ inputs.path }}
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        working-directory: ${{ inputs.path }}

      - name: Apply Terraform
        run: terraform apply -auto-approve -var-file=${{ inputs.environment }}.tfvars"
        working-directory: ${{ inputs.path }}

      - name: Post-Deployment Notifications
        run: echo "Deployment to ${{ inputs.environment }} environment completed."
