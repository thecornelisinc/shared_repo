# # .github/workflows/aws_tf_apply.yml
# name: Terraform Apply for Main

# on:
#   workflow_call:
#     inputs:
#       aws_region:
#         required: true
#         type: string
#         description: 'AWS Region'
#       aws_role_to_assume:
#         required: true
#         type: string
#         description: 'IAM Role ARN to assume via OIDC'
#       environment:
#         required: true
#         type: string
#         description: 'IAM Role ARN to assume via OIDC'

# jobs:
# #   snyk-iac-check:
# #     name: Snyk IaC Security Check for ${{ inputs.account }}
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3

# #       - name: Install Snyk
# #         run: npm install -g snyk

# #       - name: Authenticate Snyk
# #         run: snyk auth ${{ secrets.SNYK_TOKEN }}

# #       - name: Snyk IaC Test
# #         run: snyk iac test --severity-threshold=high ${{ inputs.path }}

#   terraform-apply:
#     name: Terraform Apply for ${{ inputs.environment }}
#     runs-on: ubuntu-latest
#     # needs: snyk-iac-check
#         defaults:
#             run:
#             working-directory: ${{ inputs.path}}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       - name: Configure AWS credentials using OIDC
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           role-to-assume: ${{ inputs.aws_role_to_assume }}
#           aws-region: ${{ inputs.aws_region }}

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.1.7

#       - name: Terraform Init
#         run: terraform init

  
#       - name: Plan Terraform
#         id: plan
#         run: terraform plan -var-file=${{ inputs.environment }}.tfvars

      
#       - name: Terraform Plan Status
#         if: steps.plan.outcome == 'failure'
#         run: exit 1


#       - name: Apply Terraform
#         run: terraform apply -auto-approve -var-file=${{ inputs.environment }}.tfvars"


#       - name: Post-Deployment Notifications
#         run: echo "Deployment to ${{ inputs.environment }} environment completed."

# .github/workflows/aws_tf_apply.yml
name: Terraform Apply for Main

on:
  workflow_call:
    inputs:
      account:
        description: 'The AWS account to deploy to (e.g., prod, sec)'
        required: true
        type: string
        
      aws_region:
        required: true
        type: string
        description: 'AWS Region'
        
      aws_role_to_assume:
        required: true
        type: string
        description: 'IAM Role ARN to assume via OIDC'

jobs:
#   snyk-iac-check:
#     name: Snyk IaC Security Check for ${{ inputs.account }}
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install Snyk
#         run: npm install -g snyk

#       - name: Authenticate Snyk
#         run: snyk auth ${{ secrets.SNYK_TOKEN }}

#       - name: Snyk IaC Test
#         run: snyk iac test --severity-threshold=high ${{ inputs.path }}

  terraform-apply:
    name: Terraform Apply for ${{ inputs.account }}
    runs-on: ubuntu-latest
    # needs: snyk-iac-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: terraform init

      - name: Plan Terraform
        id: plan
        run: terraform plan -var-file=sec.tfvars
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Apply Terraform
        run: terraform apply -auto-approve -var-file=sec.tfvars

      - name: Post-Deployment Notifications
        run: echo "Deployment to ${{ inputs.account }} environment completed."

